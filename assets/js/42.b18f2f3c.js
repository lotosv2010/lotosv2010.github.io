(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{476:function(s,e,n){"use strict";n.r(e);var a=n(2),r=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"vue目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue目录"}},[s._v("#")]),s._v(" vue目录")]),s._v(" "),e("p",[s._v("​\t\t在学习 "),e("code",[s._v("vue.js")]),s._v(" 源码之前，我们首先要分析一下源码目录结构，了解每个文件夹或文件的作用，有助于我们后续的源码阅读和对 "),e("code",[s._v("vue.js")]),s._v(" 框架的整体认识，下面是 "),e("code",[s._v("vue.js")]),s._v(" 源码的主要文件夹和文件的详细说明。")]),s._v(" "),e("div",{staticClass:"language-html line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[s._v("|── .circleci ----------------------------- 包含CircleCI持续集成/持续部署工具的配置文件\n|── .github ------------------------------- 项目相关的说明文档，上面的说明文档就在此文件夹\n|── benchmarks ---------------------------- 基准,性能测试文件，Vue的跑分demo，比如大数据量的table或者渲染大量SVG；目的主要有两种，一是验证性能，另一个是获得一些基准数据\n├── dist ---------------------------------- 构建后不同版本Vue文件的输出目录(UMD、CommonJS、ES 生产和开发包)\n├── examples ------------------------------ 存放一些使用Vue开发的应用案例\n├── flow ---------------------------------- 类型声明，因为Vue使用了Flow来进行静态类型检查，静态类型检查类型声明文件\n├── packages ------------------------------ 存放独立发布的包的目录(https://flowtype.org/)，包含服务端渲染和模板编译器两种不同的NPM包，是提供给不同使用场景使用的\n├── scripts ------------------------------- 存放npm脚本配置文件，结合webpack、rollup进行编译、测试、构建等操作，一般情况下我们不需要动\n│   ├── git-hooks ------------------------- 存放git钩子的目录\n│   ├── alias.js -------------------------- 模块导入所有源代码和测试中使用的别名\n│   ├── build.js -------------------------- 对 config.js 中所有的rollup配置进行构建\n│   ├── config.js ------------------------- 生成rollup配置的文件，包含在`dist/`中找到的所有文件的生成配置\n│   ├── release.sh ------------------------ 用于自动发布新版本的脚本\n├── src ----------------------------------- 主要源码所在位置，核心内容\n│   ├── compiler -------------------------- 编译器代码的存放目录，将 template 编译为 render 函数\n│   │   ├── codegen ----------------------- 把AST转换为Render函数\n│   │   ├── directives -------------------- 通用生成Render函数之前需要处理的指令\n│   │   ├── parser------------------------- 解析模版成AST \n│   ├── core ------------------------------ Vue核心代码，包括内置组件，全局API封装，Vue 实例化，观察者，虚拟DOM, 工具函数等等，与平台无关的代码\n│   │   ├── components -------------------- 组件相关属性，主要是Keep-Alive\n│   │   ├── global-api -------------------- 包含给Vue构造函数挂载全局方法(静态方法)或属性的代码，如Vue.use,Vue.extend,Vue.mixin等\n│   │   ├── instance ---------------------- 实例化相关内容，生命周期、事件等\n│   │   ├── observer ---------------------- 响应式核心目录，双向数据绑定相关文件\n│   │   ├── util -------------------------- 工具方法\n│   │   ├── vdom -------------------------- 包含虚拟DOM创建(creation)和打补丁(patching)的代码\n│   ├── platforms ------------------------- 和平台相关的内容，Vue.js 是一个跨平台的MVVM 框架(web、native、weex)，不同平台的不同构建的入口文件也在这里\n│   │   ├── web --------------------------- web平台\n│   │   |   ├── compiler ------------------ web端编译相关代码，用来编译模版成render函数basic.js\n│   │   |   ├── runtime ------------------- web端运行时相关代码，用于创建Vue实例等\n│   │   |   ├── server -------------------- 服务端渲染\n│   │   |   ├── util ---------------------- 相关工具类\n│   │   │   ├── entry-compiler.js --------- vue-template-compiler 包的入口文件\n│   │   │   ├── entry-runtime-with-compiler.js -- 独立构建版本的入口，它在 entry-runtime 的基础上添加了模板(template)到render函数的编译器\n│   │   │   ├── entry-runtime.js ---------- 运行时构建的入口，不包含模板(template)到render函数的编译器，所以不支持 `template` 选项，我们使用vue默认导出的就是这个运行时的版本。大家使用的时候要注意\n│   │   │   ├── entry-server-basic-renderer.js -- 输出 packages/vue-server-renderer/basic.js 文件\n│   │   │   ├── entry-server-renderer.js -- vue-server-renderer 包的入口文件\n│   │   ├── weex -------------------------- 基于通用跨平台的 Web 开发语言和开发经验，来构建 Android、iOS 和 Web 应用\n│   ├── server ---------------------------- 包含服务端渲染(server-side rendering，ssr)的相关代码\n│   ├── sfc ------------------------------- 包含单文件组件(*.vue文件)的解析逻辑，用于vue-template-compiler包\n│   ├── shared ---------------------------- 包含整个代码库通用的代码\n├── test ---------------------------------- 包含所有测试文件\n├── types --------------------------------- Vue新版本支持TypeScript，主要是TypeScript类型声明文件]\n├── .babelrc ------------------------------ babel 配置文件\n├── .editorconfig ------------------------- 针对编辑器的编码风格配置文件\n├── .eslintignore ------------------------- eslint 忽略配置\n├── .eslintrc ----------------------------- eslint 配置文件\n├── .flowconfig --------------------------- flow 的配置文件\n├── .gitignore ---------------------------- git 忽略配置\n├── BACKERS.md ---------------------------- 赞助者信息文件\n├── LICENSE ------------------------------- 项目开源协议\n├── package.json -------------------------- 依赖\n├── README.md ----------------------------- 说明文件\n└── yarn.lock ----------------------------- yarn版本锁定文件\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br")])]),e("p",[s._v("​\t\t了解整体框架结构，下一章我们就来分析一下不同版本的 "),e("code",[s._v("vue.js")]),s._v(" 是如何构建的。")])])}),[],!1,null,null,null);e.default=r.exports}}]);